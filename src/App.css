#root {
  max-width: 1280px;
  margin: 0 auto;
  padding: 1px;
  text-align: left;
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}

/* ——— map node pill styles ——— */
@import url('https://fonts.googleapis.com/css2?family=DM+Sans:wght@400;500;600&display=swap');

.map-node-pill {
  font-family: 'DM Sans', sans-serif;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;

  /* size comes from inline style in JSX; these are just fallbacks */
  width: 80px;
  height: 40px;

  color: #000;
  background-color: rgba(255,255,255,.3);
  border-radius: 8px;
  -webkit-backdrop-filter: blur(10px);
  backdrop-filter: blur(10px);
  font-weight: 500;
  box-shadow: 1px 1px 1rem rgb(26 26 26 / 15%);
  cursor: pointer;
  transition: transform .2s ease;
}

.map-node-pill:hover {
  transform: translate(-1px,-1px);
}

.map-node-pill .grad {
  position: absolute;
  inset: 0;
  border-radius: 8px;
  transform: translate(0.5rem,0.5rem);
  pointer-events: none;
  z-index: -1;
  background: linear-gradient(20deg, rgba(241,85,76,1) 0%, rgba(247,225,150,1) 100%);
}

/* optional: tooltip style your component already uses can stay */
/* ---------- Toolbar overlay, box, and spacer ---------- */

/* theme vars (tweak to taste) */
:root{
  --panel: #f6f8fb;            /* toolbar background */
  --border: #d9e0ea;           /* subtle border */
}

/* The fixed layer that pins the toolbar to the top of the viewport */
.toolbarOverlay{
  position: fixed;
  top: 16px;
  left: 16px;
  right: 16px;
  z-index: 1000;
  display: flex;
  justify-content: center;     /* center the toolbar horizontally */
  pointer-events: none;        /* let clicks pass through this overlay… */
}

/* The actual toolbar “card” (make sure Toolbar’s outermost element has className="toolbar") */
.toolbar{
  pointer-events: auto;        /* …but the toolbar itself is clickable */
  display: flex;
  gap: 8px;
  align-items: center;
  flex-wrap: wrap;
  background: var(--panel);
  border: 1px solid var(--border);
  border-radius: 10px;
  padding: 8px 10px;
  box-shadow: 0 6px 18px rgba(0,0,0,0.06);
  max-width: 1200px;           /* optional cap so it doesn’t stretch too wide */
  width: 100%;
}

/* If your Toolbar component does NOT set className="toolbar",
   this fallback will style its first child instead: */
.toolbarOverlay > *:first-child{
  pointer-events: auto;
  display: flex;
  gap: 8px;
  align-items: center;
  flex-wrap: wrap;
  background: var(--panel);
  border: 1px solid var(--border);
  border-radius: 10px;
  padding: 8px 10px;
  box-shadow: 0 6px 18px rgba(0,0,0,0.06);
  max-width: 1200px;
  width: 100%;
}

/* Spacer that reserves space equal to the measured toolbar height */
.toolbar-spacer{
  height: 0;                   /* JS sets the real height */
  transition: height .2s ease; /* smooth resize when chips wrap */
  /* debug background if you want to see it: */
  /* background: rgba(120,120,120,.15); */
}
